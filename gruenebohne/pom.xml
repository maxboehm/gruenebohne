<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.gruenebohne</groupId>
	<artifactId>gruenebohne</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>gruenebohne-app</name>
	<description>amazing wep app</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.ocpsoft</groupId>
			<artifactId>prettyfaces-jsf2</artifactId>
			<version>LATEST</version>
		</dependency>

		<dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-javaee6-wp-api</artifactId>
			<version>2.47.3</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>eclipselink</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.5.1</version>
			<scope>system</scope>
			<systemPath>${basedir}/src/main/webapp/WEB-INF/lib/eclipselink-2.5.1.jar</systemPath>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webResources>
						<resource>
							<directory>.</directory>
							<includes>
								<include>project.properties</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>ant-magic</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<property name="version" value="${project.version}" />
								<property name="warName" value="${project.artifactId}" />
								<ant antfile="${basedir}/build.xml" target="buildinfo" />
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>ant-copy</id>
						<phase>package</phase>
						<configuration>
							<target>
								<!-- toFile HAS TO BE SET TO YOUR SPECIFIC SERVER PICKUP FOLDER -->
								<copy
									file="target/${project.artifactId}-${project.version}.${project.packaging}"
									tofile="/Users/Fabian/Documents/workspace/Servers/Java EE 6 Web Profile Server-config/pickup/gruenebohne.war" />

								<!-- toFile HAS TO BE SET TO YOUR SPECIFIC HANA SDK TOOLS FOLDER -->
								<!-- PLEASE USE THE CONSOLE CLIENT IN ORDER TO DEPLOY TO YOU CLOUD -->
								<!-- SEE: https://help.hana.ondemand.com/help/frameset.htm?937db4fa204c456f9b7820f83bc87118.html -->
								<!-- ALL PARAMETERS CAN ALSO BE STORED IN AN .properties file -->
								<!-- Example example.properties file: host=hanatrial.ondemand.com 
									account=p1940434107trial (replace with your account) user=p1940434107 (replace 
									with your user) application=gruenebohne source="toFile" overwrite=false strategy=replace-binaries -->
								<!-- COMMAND: neo.sh hot-update example.properties -->
								<copy
									file="target/${project.artifactId}-${project.version}.${project.packaging}"
									tofile="/Users/Fabian/Desktop/neo-javaee6-wp-sdk-2.47.3/tools/gruenebohne.war" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>